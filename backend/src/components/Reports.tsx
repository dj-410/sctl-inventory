import React, { useState } from 'react';
import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';
import { Asset, ActivityLog } from '../types';
import logo from '../assets/logo.png';

interface ReportsProps {
  assets: Asset[];
  activityLogs: ActivityLog[];
  currentUser: string;
}

export const Reports: React.FC<ReportsProps> = ({ assets, activityLogs, currentUser }) => {
  const [filterType, setFilterType] = useState('');
  const [filterStatus, setFilterStatus] = useState('');

  const filteredAssets = assets.filter(asset => {
    return (
      (filterType ? asset.asset_type === filterType : true) &&
      (filterStatus ? asset.status === filterStatus : true)
    );
  });

  const generateAssetPDF = () => {
    const doc = new jsPDF();

    const img = new Image();
    img.src = logo;
    doc.addImage(img, 'PNG', 10, 10, 30, 30);

    doc.setFontSize(16);
    doc.text('Smart City Asset Report', 50, 20);
    doc.setFontSize(10);
    doc.text(`Generated by: ${currentUser}`, 50, 26);
    doc.text(`Date: ${new Date().toLocaleDateString()}`, 50, 31);

    autoTable(doc, {
      startY: 45,
      head: [['ID', 'Name', 'Type', 'Location', 'Status', 'Assigned']],
      body: filteredAssets.map(asset => [
        asset.id || '',
        asset.name || '',
        asset.asset_type || '',
        asset.location || '',
        asset.status || '',
        asset.assigned_to || ''
      ]),
      theme: 'striped',
      headStyles: { fillColor: [22, 160, 133] }
    });

    doc.save('Asset_Report.pdf');
  };

  const generateLogPDF = () => {
    const doc = new jsPDF();

    const img = new Image();
    img.src = logo;
    doc.addImage(img, 'PNG', 10, 10, 30, 30);

    doc.setFontSize(16);
    doc.text('Smart City Activity Log Report', 50, 20);
    doc.setFontSize(10);
    doc.text(`Generated by: ${currentUser}`, 50, 26);
    doc.text(`Date: ${new Date().toLocaleDateString()}`, 50, 31);

    autoTable(doc, {
      startY: 45,
      head: [['User', 'Action', 'Target', 'Details', 'Time']],
      body: activityLogs.slice(0, 50).map(log => [
        log.user || '',
        log.action || '',
        log.target || '-',
        log.details || '',
        new Date(log.timestamp).toLocaleString()
      ]),
      theme: 'grid',
      headStyles: { fillColor: [52, 152, 219] }
    });

    doc.save('Activity_Log_Report.pdf');
  };

  return (
    <div className="max-w-6xl mx-auto p-6 bg-white shadow-md rounded-lg mt-8">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl font-bold text-gray-800">System Reports</h2>
        <div className="space-x-3">
          <button
            onClick={generateAssetPDF}
            className="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition"
          >
            Download Asset PDF
          </button>
          <button
            onClick={generateLogPDF}
            className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition"
          >
            Download Log PDF
          </button>
        </div>
      </div>

      {/* Filters */}
      <div className="flex flex-wrap gap-4 mb-6">
        <div>
          <label className="text-sm font-medium text-gray-700">Filter by Asset Type:</label>
          <select
            value={filterType}
            onChange={e => setFilterType(e.target.value)}
            className="ml-2 border px-3 py-1 rounded"
          >
            <option value="">All</option>
            <option value="Camera">Camera</option>
            <option value="Computer">Computer</option>
            <option value="Software">Software</option>
            <option value="Other">Other</option>
          </select>
        </div>
        <div>
          <label className="text-sm font-medium text-gray-700">Filter by Status:</label>
          <select
            value={filterStatus}
            onChange={e => setFilterStatus(e.target.value)}
            className="ml-2 border px-3 py-1 rounded"
          >
            <option value="">All</option>
            <option value="Active">Active</option>
            <option value="Inactive">Inactive</option>
            <option value="Maintenance">Maintenance</option>
          </select>
        </div>
      </div>

      {/* Filtered Assets Table */}
      <div className="mb-8">
        <h3 className="text-lg font-semibold text-gray-700 mb-2">Assets</h3>
        <div className="overflow-auto">
          <table className="min-w-full divide-y divide-gray-200 text-sm">
            <thead className="bg-gray-100">
              <tr>
                <th className="px-4 py-2 text-left">Name</th>
                <th className="px-4 py-2 text-left">Type</th>
                <th className="px-4 py-2 text-left">Location</th>
                <th className="px-4 py-2 text-left">Status</th>
              </tr>
            </thead>
            <tbody className="divide-y divide-gray-100">
              {filteredAssets.map(asset => (
                <tr key={asset.id}>
                  <td className="px-4 py-2">{asset.name}</td>
                  <td className="px-4 py-2">{asset.asset_type}</td>
                  <td className="px-4 py-2">{asset.location}</td>
                  <td className="px-4 py-2">{asset.status}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {/* Logs Table */}
      <div>
        <h3 className="text-lg font-semibold text-gray-700 mb-2">Recent Activity Logs</h3>
        <div className="overflow-auto">
          <table className="min-w-full divide-y divide-gray-200 text-sm">
            <thead className="bg-gray-100">
              <tr>
                <th className="px-4 py-2 text-left">User</th>
                <th className="px-4 py-2 text-left">Action</th>
                <th className="px-4 py-2 text-left">Target</th>
                <th className="px-4 py-2 text-left">Details</th>
                <th className="px-4 py-2 text-left">Time</th>
              </tr>
            </thead>
            <tbody className="divide-y divide-gray-100">
              {activityLogs.slice(0, 10).map((log, idx) => (
                <tr key={idx}>
                  <td className="px-4 py-2">{log.user}</td>
                  <td className="px-4 py-2">{log.action}</td>
                  <td className="px-4 py-2">{log.target || '-'}</td>
                  <td className="px-4 py-2">{log.details}</td>
                  <td className="px-4 py-2">{new Date(log.timestamp).toLocaleString()}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};
